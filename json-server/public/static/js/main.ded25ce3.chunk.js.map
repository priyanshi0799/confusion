{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/dishDetailsComponent.js","components/HomeComponent.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/AboutusComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotion.js","redux/leader.js","redux/forms.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderDish","dish","in","transformProps","exitTransform","top","src","image","alt","name","description","required","val","length","maxLength","len","CommentForm","props","state","modal","toggle","bind","handleSubmit","this","setState","values","postComment","dishId","rating","author","comment","outline","color","onClick","isOpen","onSubmit","htmlFor","md","select","model","text","id","placeholder","validators","minLength","show","messages","textarea","rows","size","offset","type","Component","RenderComments","comments","map","key","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","isLoading","errMess","to","active","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","width","Menu","menu","dishes","Header","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","navbar","innerRef","input","check","Footer","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","resetFeedbackForm","role","checkbox","About","leaders","RenderLeader","tag","left","middle","object","body","heading","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","addComment","catch","console","log","actions","reset","feedback","firstname","lastname","tel","email","agree","contactType","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","telnum","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ded25ce3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = ()=>{\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading. . .</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://localhost:3001/';\r\n","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, BreadcrumbItem, Breadcrumb, Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderDish({dish}){\r\n    return(\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name}></CardImg>\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody> \r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state= { \r\n            modal: false\r\n        };\r\n        this.toggle= this.toggle.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    toggle() { \r\n        this.setState( \r\n            {modal: !this.state.modal} \r\n        ); \r\n    }\r\n        \r\n    handleSubmit(values){\r\n        this.toggle();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline color=\"secondary\" onClick= {this.toggle}> \r\n                    <span className=\"fa fa-sign-in\"></span> \r\n                    Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} >\r\n                    <ModalHeader toggle= {this.toggle}> Submit Comment </ModalHeader>\r\n                    <ModalBody>\r\n                            \r\n                    <LocalForm onSubmit={(values)=> this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                            <Col md={12}>\r\n                                <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text \r\n                                        model=\".name\" \r\n                                        id=\"name\" \r\n                                        name=\"name\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{required, minLength: minLength(3), maxLength: maxLength(15)}}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{ required: 'Required', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 characters or less'}}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea \r\n                                        model=\".comment\" \r\n                                        id=\"comment\" \r\n                                        name=\"comment\"\r\n                                        rows=\"4\"\r\n                                        className=\"form-control\" \r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:12, offset: 0}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                        \r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n} \r\n    \r\n\r\nfunction RenderComments({comments, postComment, dishId}){\r\n    if(comments!=null){\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"List-unstyled\">\r\n                    <Stagger in>\r\n                    {comments.map((comment)=>{\r\n                        return(\r\n                            <Fade in>\r\n                                <li  key={comment.id}>\r\n                                    <p>{comment.comment}</p>\r\n                                    <p>--{comment.author} , {new Intl.DateTimeFormat('en-US', {year:'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                            </Fade>\r\n                            );\r\n                    })}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment}/>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DishDetail = (props)=>{\r\n    if(props.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if(props.errMess){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if(props.dish !=null){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish}></RenderDish>\r\n                    <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id}></RenderComments>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\nexport default DishDetail;\r\n","import React from 'react';\r\nimport {Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <Loading/>\r\n        );\r\n    }\r\n    else if(errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name}/>\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {/* if designation is present..display otherwise null...JS code  */}\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>: null}  \r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        )\r\n    }   \r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                    isLoading={props.dishesLoading} \r\n                    errMess={props.dishesErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                     isLoading={props.promosLoading} \r\n                     errMess={props.promosErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                     isLoading={props.leadersLoading} \r\n                     errMess={props.leadersErrMess}\r\n                     />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardTitle, CardImgOverlay, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({dish, onClick}){\r\n        return(\r\n            <Card>   \r\n                <Link to={`/menu/${dish.id}`}>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}></CardImg>\r\n                    <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>  \r\n        );\r\n    }\r\n\r\n    const Menu = (props)=>{\r\n        const menu = props.dishes.dishes.map((dish)=>{\r\n            return(\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish}/>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if(props.dishes.isLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if(props.dishes.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\nexport default Menu;\r\n\r\n// import React, {Component} from 'react';\r\n// import {Media,Card, CardImg, CardImgOverlay, CardTitle, CardBody, CardText} from 'reactstrap';\r\n\r\n// class Menu extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//             selected: null\r\n//         };\r\n//     }\r\n\r\n//     onDishSelect(dish){\r\n//         this.setState({\r\n//             selected:dish\r\n//         });\r\n//     }\r\n\r\n//     renderDish(dish){\r\n//         if(dish!=null){\r\n//             return(\r\n//                 <Card>\r\n//                    <CardImg width=\"100%\" src={dish.image} alt={dish.name}/>\r\n//                    <CardBody>\r\n//                     <CardTitle>{dish.name}</CardTitle>\r\n//                     <CardText>{dish.description}</CardText>\r\n//                    </CardBody> \r\n//                 </Card>\r\n//             )\r\n//         }\r\n//         else{\r\n//             return(\r\n//                 <div></div>\r\n//             );\r\n//         }\r\n//     }\r\n\r\n//     render(){\r\n//         const menu=this.props.dishes.map((dish)=>{\r\n//             return(\r\n//                 <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n//                     <Card onClick={()=>this.onDishSelect(dish)}>\r\n//                         <CardImg width=\"100%\" src={dish.image} alt={dish.name}/>\r\n//                             <CardImgOverlay>\r\n//                                 <CardTitle>{dish.name}</CardTitle>\r\n//                             </CardImgOverlay>\r\n//                     </Card>\r\n//                 </div>\r\n//             )\r\n//         });\r\n//         return(\r\n//             <div className=\"container\">\r\n//                 <div className=\"row\">\r\n//                     {menu}\r\n//                 </div>\r\n//                 <div className=\"row\">\r\n//                     {this.renderDish(this.state.selected)}\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default Menu;","import React, {Component} from 'react';\r\nimport { Navbar, NavbarBrand, Jumbotron, Nav, NavbarToggler, Collapse, NavItem, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });  \r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username \"+this.username.value+\" Password \"+this.password.value+\" Remember \"+this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav}/>\r\n                    <NavbarBrand className = \"mr-auto\" href=\"/\">\r\n                        <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\"></img>\r\n                    </NavbarBrand>\r\n\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/home\">\r\n                                <span className=\"fa fa-home fa-lg\"></span> Home\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                <span className=\"fa fa-address fa-lg\"></span> Contact Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\"></span>\r\n                                Login\r\n                            </Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines and create a unique fusion experience. Our lipsmaking \r\n                                creations will tickle your culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit = {this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input}/>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input}/>Remember Me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\r\nimport {Link} from 'react-router-dom'\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val)=>val && val.length;\r\nconst maxLength = (len)=> (val) => !(val) || (val.length<=len);\r\nconst minLength = (len)=> (val) => (val) && (val.length>=len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values){\r\n        //console.log(\"Current state is \"+ JSON.stringify(values));\r\n        //alert(\"Current state is \"+ JSON.stringify(values));\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"www.skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback!</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\" validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}/>\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required', minLength: 'Must be greater than 2 characters', maxLength:'Must be 15 characters or less'}}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\" validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}/>\r\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required', minLength: 'Must be greater than 2 characters', maxLength:'Must be 15 characters or less'}}/>    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Contact Number\" className=\"form-control\" validators={{required, minLength:minLength(3), maxLength:maxLength(15), isNumber}}/>\r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{required: 'Required', minLength: 'Must be greater than 2 numbers', maxLength:'Must be 15 numbers or less', isNumber:'Must be a number'}}/>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\" validators={{required,validEmail}}/> \r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{required: 'Required',validEmail:'Invalid Email Address'}}/>    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-group\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-control\" />\r\n                                            {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                   <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                       <option>Tel.</option>\r\n                                       <option>Email</option>\r\n                                    </Control.select> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader}></RenderLeader>\r\n            // <p>Leader {leader.name}</p>\r\n            \r\n        );\r\n    });\r\n\r\nfunction RenderLeader({leader}){\r\n    return(\r\n        <div className=\"col-12 mt-5\">\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + leader.image} alt={leader.name}></Media>\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                <Media heading>{leader.name}</Media>\r\n                    <h3>{leader.designation}</h3>\r\n                     <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>  \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n    if(props.leaders.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if(props.leaders.errMess){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\nelse if(props.leaders !=null){\r\n  return(\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <Breadcrumb>\r\n                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n                <h3>About Us</h3>\r\n                <hr />\r\n            </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Stagger in>\r\n                        <Media list>\r\n                            {leaders}\r\n                        </Media>\r\n                    </Stagger>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment)=>({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) =>{\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type' : 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n\r\n        .then(response=>{\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else{\r\n                var error = new Error('Error '+ response.status + ': '+ response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('Post comments', error.message)\r\n              alert('Your comment could not be posted\\n Error: '+ error.message)})\r\n    }\r\n\r\n    export const postFeedback = ({firstname, lastname, tel, email, agree, contactType, feedback}) => (dispatch)=>{\r\n        const newFeedback ={\r\n            firstname: firstname,\r\n            lastname: lastname,\r\n            tel: tel,\r\n            email: email,\r\n            agree: agree,\r\n            contactType: contactType,\r\n            feedback: feedback\r\n        }\r\n\r\n        return fetch(baseUrl + 'feedback', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newFeedback),\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            credentials: 'same-origin'\r\n        })\r\n\r\n        .then(response=>{\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else{\r\n                var error = new Error('Error '+ response.status + ': '+ response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {dispatch(postFeedback(response));\r\n                alert(\"ThankYou \"+JSON.stringify(response));\r\n            })\r\n        .catch(error => { console.log('Post comments', error.message)\r\n            alert('Your feedback could not be posted\\n Error: '+ error.message)})\r\n    }\r\n\r\n//Thunk\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response=>{\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else{\r\n                var error = new Error('Error '+ response.status + ': '+ response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => {\r\n            dispatch(dishesFailed(error.message))\r\n        });\r\n}\r\n\r\nexport const dishesLoading = ()=>({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess)=>({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) =>({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n})\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response=>{\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else{\r\n                var error = new Error('Error '+ response.status + ': '+ response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => {\r\n            dispatch(commentsFailed(error.message))\r\n        });\r\n}\r\n\r\nexport const commentsFailed = (errmess)=>({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) =>({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response=>{\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else{\r\n                var error = new Error('Error '+ response.status + ': '+ response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => {\r\n            dispatch(promosFailed(error.message))\r\n        });\r\n}\r\n\r\nexport const promosLoading = ()=>({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess)=>({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) =>({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n})\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response=>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error('Error '+ response.status + ': '+ response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error =>{\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => {\r\n            dispatch(leadersFailed(error.message))\r\n        });\r\n}\r\n\r\nexport const leadersLoading = ()=>({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess)=>({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) =>({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n})","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, {Component} from 'react';\r\nimport DishDetail from './dishDetailsComponent';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport About from './AboutusComponent';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nconst mapStateToProps = state=>{\r\n   return{\r\n     dishes: state.dishes,\r\n     comments: state.comments,\r\n     promotions: state.promotions,\r\n     leaders: state.leaders\r\n   } \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>({\r\n  postComment: (dishId, rating, author, comment)=>dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: ()=>{dispatch(fetchDishes())},\r\n  resetFeedbackForm: ()=> { dispatch(actions.reset('feedback'))},\r\n  fetchComments: ()=>{dispatch(fetchComments())},\r\n  fetchPromos: ()=>{dispatch(fetchPromos())},\r\n  fetchLeaders: ()=>{dispatch(fetchLeaders())},\r\n  postFeedback: (feedback)=> dispatch(postFeedback(feedback))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render(){\r\n    const HomePage = ()=>{\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish)=> dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishesErrMess={this.props.dishes.errMess}\r\n\r\n        promotion={this.props.promotions.promotions.filter((promo)=> promo.featured)[0]}\r\n        promosLoading={this.props.promotions.isLoading}\r\n        promosErrMess={this.props.promotions.errMess}\r\n\r\n        leader={this.props.leaders.leaders.filter((leader)=> leader.featured)[0]}\r\n        leadersLoading={this.props.leaders.isLoading}\r\n        leadersErrMess={this.props.leaders.errMess}/>\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match})=>{\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish)=>dish.id === parseInt(match.params.dishId, 10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment)=>comment.dishId===parseInt(match.params.dishId, 10))}\r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment}/>\r\n      )\r\n    }\r\n\r\n    const AboutUs = ()=>{\r\n      return(\r\n        <About leaders={this.props.leaders}></About>\r\n      )\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <TransitionGroup>\r\n        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n          <Switch>\r\n            <Route path=\"/home\" component={HomePage}/>\r\n            <Route exact path=\"/menu\" component={()=> <Menu dishes={this.props.dishes}/>}/> \r\n            <Route path=\"/menu/:dishId\" component={DishWithId}/>\r\n            <Route exact path=\"/contactus\" component={()=><Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />}/>\r\n            <Route exact path=\"/aboutus\" component={AboutUs}/>\r\n            <Redirect to=\"/home\"/>\r\n          </Switch>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n};\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state={\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n    }, action)=>{\r\n        switch(action.type){\r\n            case ActionTypes.ADD_DISHES:\r\n                return {...state, isLoading: false, errMess: null, dishes: action.payload}\r\n\r\n            case ActionTypes.DISHES_LOADING:\r\n                return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n            case ActionTypes.DISHES_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload}\r\n                \r\n            default:\r\n                return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state={\r\n    errMess: null,\r\n    comments: []\r\n}, action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload}\r\n        \r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload}\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n    }, action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload}\r\n\r\n            case ActionTypes.PROMOS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n            case ActionTypes.PROMOS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n    }, action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\r\n\r\n            case ActionTypes.LEADERS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n            case ActionTypes.LEADERS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname : '',\r\n    lastname : '',\r\n    telnum : '',\r\n    email: '',\r\n    agree : false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotion';\r\nimport { Leaders } from './leader';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = ()=>{\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render(){\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div>\n          <Main/>\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n}\n\nexport default App;\n\n// import React, {Component} from 'react';\n// import {Navbar, NavbarBrand} from 'reactstrap';\n// import Menu from './components/MenuComponent';\n// import {DISHES} from './shared/dishes';\n\n// class App extends Component{\n//   constructor(props){\n//     super(props);\n\n//     this.state={\n//       dishes: DISHES\n//     };\n//   }\n\n//   render(){\n//     return(\n//       <div>\n//         <Navbar dark color=\"primary\">\n//           <div className=\"container\">\n//             <NavbarBrand href=\"/\">Resturant Con Fusion</NavbarBrand>\n//           </div>\n//         </Navbar>\n//         <Menu dishes={this.state.dishes}/>\n//       </div>\n//     )\n//   }\n// }\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}